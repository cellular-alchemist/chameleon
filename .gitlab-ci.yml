# .gitlab-ci.yml
stages:
  - build
  - deploy

variables:
  # GitLab Container Registry URL
  REGISTRY_URL: $CI_REGISTRY
  IMAGE_NAME: $CI_REGISTRY_IMAGE/planar-waves
  IMAGE_TAG: $CI_COMMIT_SHORT_SHA

# Build Docker image using Kaniko
build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  variables:
    # CRITICAL: This fixes the speed problems on NRP!
    GODEBUG: "http2client=0"
  script:
    - echo "Building with Kaniko..."
    - mkdir -p /kaniko/.docker
    - |
      echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor 
      --cache=true 
      --push-retry=10 
      --context $CI_PROJECT_DIR 
      --dockerfile $CI_PROJECT_DIR/docker/Dockerfile 
      --destination $IMAGE_NAME:$IMAGE_TAG
      --destination $IMAGE_NAME:latest
  only:
    - main
    - master
    - development

# Generate Kubernetes manifest (keep your existing configuration)
generate-manifest:
  stage: deploy
  image: alpine:latest
  before_script:
    - mkdir -p k8s
  script:
    - echo "Generating Kubernetes manifest..."
    - |
      cat > k8s/planar-waves-job.yaml << EOF
      apiVersion: batch/v1
      kind: Job
      metadata:
        name: ceres-${CI_COMMIT_SHORT_SHA}
        namespace: braingeneers
      spec:
        backoffLimit: 0
        template:
          spec:
            containers:
            - name: planar-waves
              image: ${IMAGE_NAME}:${IMAGE_TAG}
              imagePullPolicy: Always
              command: ["/bin/bash", "-c"]
              args:
                - |
                  export AWS_REQUEST_CHECKSUM_CALCULATION=when_required
                  export AWS_RESPONSE_CHECKSUM_VALIDATION=when_required
                  export PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:32
                  cd /workspace
                  python /workspace/src/runner.py s3://braingeneers/personal/dani/dvorakian_study/experiment_config.yml
              resources:
                requests:
                  cpu: "4"
                  memory: "16Gi"
                  nvidia.com/gpu: 1
                limits:
                  cpu: "8"
                  memory: "32Gi"
                  nvidia.com/gpu: 1
              volumeMounts:
              - name: output-volume
                mountPath: /workspace/output
              - name: prp-s3-credentials
                mountPath: "/root/.aws/credentials"
                subPath: "credentials"
              - name: shm-volume
                mountPath: /dev/shm
            tolerations:
            - key: "nvidia.com/gpu"
              operator: "Exists"
              effect: "PreferNoSchedule"
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: nvidia.com/gpu.product
                      operator: In
                      values:
                      - NVIDIA-A10
                      - NVIDIA-GeForce-RTX-3090
            restartPolicy: Never
            imagePullSecrets:
            - name: gitlab-registry
            volumes:
            - name: output-volume
              persistentVolumeClaim:
                claimName: demeter-output-pvc
            - name: prp-s3-credentials
              secret:
                secretName: prp-s3-credentials
                defaultMode: 256
            - name: shm-volume
              emptyDir:
                medium: Memory
                sizeLimit: 8Gi
      EOF
    - echo "Manifest generated successfully"
  artifacts:
    paths:
      - k8s/planar-waves-job.yaml
    expire_in: 1 week
  only:
    - main
    - master